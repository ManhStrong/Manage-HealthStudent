/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this donXinNghiTheoMaGVlate file, choose Tools | Templates
 * and open the donXinNghiTheoMaGVlate in the editor.
 */
package GUI;

import static GUI.TrangChuSinhVien.LOGO;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import ObjectPG.TableDonXinNghiGV;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.TreeSet;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileSystemView;
import ObjectPG.DonXinNghi;
import ObjectPG.DonXinNghiGV;
import java.io.IOException;
import java.nio.file.Files;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.util.Calendar;
import java.util.Date;


/**
 *
 * @author HQuan
 */
public class NopDonXinNghiGV extends javax.swing.JFrame {

    private String maGV;
    private String linkAbsolute;
    private String link;

    int dongchon = -1;
    DonXinNghiGV dxn = new DonXinNghiGV();
    static TreeSet<DonXinNghiGV> donXinNghiTheoMaGV = new TreeSet<DonXinNghiGV>();

    /**
     * Creates new form NopDonXinNghi
     */
    public void LoadTableDXN() {
        for (DonXinNghiGV item : DonXinNghiGV.dxngvs) {
            if (item.getMaGV() != null && item.getMaGV().compareTo(maGV) == 0) {
                donXinNghiTheoMaGV.add(item);
            }
        }
        tableDXN.setModel(new TableDonXinNghiGV(donXinNghiTheoMaGV));
//        tableDXN.setModel(new TableDonXinNghiGV(DonXinNghi.dxns));
    }

    public void showLogo(String linkImage) {
        try {
            BufferedImage img = null;
            img = ImageIO.read(new File(linkImage));
            Image img1 = img.getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH);
            jLabel1.setIcon(new ImageIcon(img1));
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }

    public void formatHeader() {
        showLogo(LOGO);
        tNameUniversity.setText("Trường Đại Học Công Nghiệp Hà Nội");
        tName.setText("Nộp đơn xin nghỉ");
    }

    public void start(String maGV) {
        rdBinhThuong.setSelected(true);
        LocalDateTime maDon = LocalDateTime.now();
        txtMaDon.setText(maDon.toString());
        txtMaGV.setText(maGV);
        LocalDate today = LocalDate.now();
        txtNgayNop.setText(today.toString());
        jDateChooser1.setDate(null);
        jDateChooser2.setDate(null);
    }

    public void selectFileImage() {
        JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());

        int returnValue = jfc.showOpenDialog(null);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFile = jfc.getSelectedFile();
            linkAbsolute = selectedFile.getAbsolutePath();
            link = selectedFile.getName();

            //Hien thi anh duoc chon
            try {
                BufferedImage img = null;
                img = ImageIO.read(new File(linkAbsolute));
                Image img1 = img.getScaledInstance(displayImage.getWidth(), displayImage.getHeight(), Image.SCALE_SMOOTH);
                displayImage.setIcon(new ImageIcon(img1));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.toString());
            }

            txtLink.setText(link);
        }
    }

    public NopDonXinNghiGV() {

        initComponents();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(this.DISPOSE_ON_CLOSE);
        formatHeader();
        LoadTableDXN();
        DonXinNghiGV.readData();
        LoadTableDXN();
        start("");
    }

    public NopDonXinNghiGV(String maGV) {
        this.maGV = maGV;
        initComponents();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(this.DISPOSE_ON_CLOSE);
        formatHeader();
        LoadTableDXN();
        DonXinNghiGV.readData();
        LoadTableDXN();
        start(maGV);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tNameUniversity = new javax.swing.JLabel();
        tName = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableDXN = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnNewDon = new javax.swing.JButton();
        btnSuaDon = new javax.swing.JButton();
        btnXoaDon = new javax.swing.JButton();
        labelMaDon = new javax.swing.JLabel();
        labelMaGV = new javax.swing.JLabel();
        labelLyDo = new javax.swing.JLabel();
        labelAnh = new javax.swing.JLabel();
        labelTinhTrangSucKhoe = new javax.swing.JLabel();
        labelNgayNop = new javax.swing.JLabel();
        labelNgayBDNghi = new javax.swing.JLabel();
        dateNgayKTNghi = new javax.swing.JLabel();
        txtMaDon = new javax.swing.JTextField();
        txtMaGV = new javax.swing.JTextField();
        txtLyDo = new javax.swing.JTextField();
        txtNgayNop = new javax.swing.JTextField();
        displayImage = new javax.swing.JLabel();
        txtLink = new javax.swing.JTextField();
        btnSelectFile = new javax.swing.JButton();
        rdBinhThuong = new javax.swing.JRadioButton();
        rdBiBenh = new javax.swing.JRadioButton();
        btnClear = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setPreferredSize(new java.awt.Dimension(1000, 800));

        jLabel1.setText("Logo");

        tNameUniversity.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tNameUniversity.setText("Name University");

        tName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        tName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tName.setText("Name");

        tableDXN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableDXNMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tableDXN);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 51, 0));
        jLabel2.setText("Danh sách đơn đã nộp");

        btnNewDon.setText("Nộp đơn mới");
        btnNewDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewDonActionPerformed(evt);
            }
        });

        btnSuaDon.setText("Sửa đơn");
        btnSuaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaDonActionPerformed(evt);
            }
        });

        btnXoaDon.setText("Xóa đơn");
        btnXoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaDonActionPerformed(evt);
            }
        });

        labelMaDon.setText("Mã đơn:");

        labelMaGV.setText("Mã giáo viên:");

        labelLyDo.setText("Lý do:");

        labelAnh.setText("Ảnh:");

        labelTinhTrangSucKhoe.setText("Tình trạng sức khỏe:");

        labelNgayNop.setText("Ngày nộp:");

        labelNgayBDNghi.setText("Ngày bắt đầu nghỉ:");

        dateNgayKTNghi.setText("Ngày kết thúc nghỉ:");

        txtMaDon.setEnabled(false);

        txtMaGV.setEnabled(false);

        txtNgayNop.setEnabled(false);

        displayImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtLink.setEnabled(false);
        txtLink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLinkActionPerformed(evt);
            }
        });

        btnSelectFile.setText("Chọn file ảnh");
        btnSelectFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectFileActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdBinhThuong);
        rdBinhThuong.setText("Bình thường");

        buttonGroup1.add(rdBiBenh);
        rdBiBenh.setText("Bị bệnh");

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        jDateChooser1.setDateFormatString("yyyy-MM-dd");

        jDateChooser2.setDateFormatString("yyyy-MM-dd");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tNameUniversity, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tName, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(btnNewDon)
                        .addGap(91, 91, 91)
                        .addComponent(btnSuaDon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 494, Short.MAX_VALUE)
                        .addComponent(btnXoaDon)
                        .addGap(266, 266, 266))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(labelMaGV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(labelMaDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(labelLyDo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(labelTinhTrangSucKhoe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(labelNgayNop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(labelNgayBDNghi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(dateNgayKTNghi, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtMaDon, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                    .addComponent(rdBinhThuong, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(31, 31, 31)
                                    .addComponent(rdBiBenh, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                    .addComponent(displayImage, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnSelectFile)
                                        .addComponent(txtLink, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(txtMaGV, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(txtLyDo, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNgayNop, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jDateChooser2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(458, 458, 458)
                                .addComponent(btnClear))
                            .addComponent(jScrollPane3))
                        .addGap(95, 95, 95))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tNameUniversity)
                    .addComponent(tName))
                .addGap(35, 35, 35)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelMaDon)
                    .addComponent(txtMaDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelMaGV)
                    .addComponent(txtMaGV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelLyDo)
                    .addComponent(txtLyDo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTinhTrangSucKhoe)
                    .addComponent(rdBinhThuong)
                    .addComponent(rdBiBenh))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNgayNop)
                    .addComponent(txtNgayNop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelNgayBDNghi)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateNgayKTNghi)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtLink, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(btnSelectFile))
                    .addComponent(labelAnh)
                    .addComponent(displayImage, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(btnClear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNewDon)
                    .addComponent(btnSuaDon)
                    .addComponent(btnXoaDon))
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 1294, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 733, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public Boolean checkInput() throws ParseException {
        Date today = new SimpleDateFormat("yyyy-MM-dd").parse(txtNgayNop.getText());
        if (txtLyDo.getText().compareTo("") == 0) {
            JOptionPane.showMessageDialog(this, "Lý do không được để trống");
            return false;
        } else if (jDateChooser1.getDate() == null || jDateChooser1.getDate().before(today)) {
            JOptionPane.showMessageDialog(this, "Ngày bắt đầu nghỉ không đúng");
            return false;
        } else if (jDateChooser1.getDate() == null || jDateChooser2.getDate().before(jDateChooser1.getDate())) {
            JOptionPane.showMessageDialog(this, "Ngày kết thúc nghỉ không đúng");
            return false;
        } else if (txtLink.getText().compareTo("") == 0) {
            JOptionPane.showMessageDialog(this, "Thêm ảnh làm bằng chứng!");
            return false;
        }
        return true;
    }

    public void addImageToFolder(String linkImage) {

        String newPath = "./src/File/Image/DonXinNghi";
        File directory = new File(newPath);

        File sourceFile = null;
        File destinationFile = null;

        if (directory.exists()) {
            try {
                String extension = linkImage.substring(linkImage.lastIndexOf('.') + 1);
                sourceFile = new File(linkImage);
                String subLink = link.substring(0, link.lastIndexOf("."));
                destinationFile = new File(newPath + "/" + subLink + "." + extension);
                Files.copy(sourceFile.toPath(), destinationFile.toPath());
            } catch (IOException ex) {
                System.out.println(ex.toString());
            }
        } else {
            System.err.println("NOT FOUND FOLDER");
        }
    }

    private void tableDXNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDXNMouseClicked
        dongchon = tableDXN.getSelectedRow();

        if (dongchon != -1) {
            ArrayList<DonXinNghiGV> newDxns = new ArrayList<>(donXinNghiTheoMaGV);
            dxn = newDxns.get(dongchon);
            txtMaDon.setText(dxn.getMaDon());
            txtMaGV.setText(dxn.getMaGV());
            txtLyDo.setText(dxn.getLyDo());
            if (dxn.gettTSK().compareTo("Bình thường") == 0) {
                rdBinhThuong.setSelected(true);
            }
            if (dxn.gettTSK().compareTo("Bị bệnh") == 0) {
                rdBiBenh.setSelected(true);
            }
            txtNgayNop.setText(dxn.getNgayNop());
            Date ngayBDNghi, ngayKTNghi;
            try {
                ngayBDNghi = new SimpleDateFormat("yyyy-MM-dd").parse(dxn.getNgayBatDauNghi());
                ngayKTNghi = new SimpleDateFormat("yyyy-MM-dd").parse(dxn.getNgayKetThucNghi());
                jDateChooser1.setDate(ngayBDNghi);
                jDateChooser2.setDate(ngayKTNghi);
            } catch (ParseException ex) {
                System.out.println(ex.toString());
            }
            txtLink.setText(dxn.getAnh());

            try {
                BufferedImage img = null;
                img = ImageIO.read(new File("./src/File/Image/DonXinNghi/" + txtLink.getText()));
                Image img1 = img.getScaledInstance(displayImage.getWidth(), displayImage.getHeight(), Image.SCALE_SMOOTH);
                displayImage.setIcon(new ImageIcon(img1));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.toString() + " Loi doc anh");
            }
        }
    }//GEN-LAST:event_tableDXNMouseClicked

    private void txtLinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLinkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLinkActionPerformed

    private void btnSelectFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectFileActionPerformed
        selectFileImage();
    }//GEN-LAST:event_btnSelectFileActionPerformed

    private void btnNewDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewDonActionPerformed

        try {
            if (checkInput()) {

                int sizeBeforeAdd = DonXinNghiGV.dxngvs.size();
                String status = "";
                if (rdBiBenh.isSelected()) {
                    status = "Bị bệnh";
                }
                if (rdBinhThuong.isSelected()) {
                    status = "Bình thường";
                }
                DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                String ngayBDNghi = dateFormat.format(jDateChooser1.getDate());
                String ngayKTNghi = dateFormat.format(jDateChooser2.getDate());

                dxn = new DonXinNghiGV(txtMaDon.getText(),
                        txtMaGV.getText(), txtLyDo.getText(),
                        txtLink.getText(),
                        status, txtNgayNop.getText(),
                        ngayBDNghi, ngayKTNghi, false);

                DonXinNghiGV.dxngvs.add(dxn);
                addImageToFolder(linkAbsolute);
                JOptionPane.showMessageDialog(this, "Thêm mới thành công!", "Thông báo", WIDTH);

            }
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "Thêm mới KHÔNG thành công!", "Thông báo", WIDTH);
        }
        LoadTableDXN();
        DonXinNghiGV.writeData();
    }//GEN-LAST:event_btnNewDonActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        start(maGV);
        txtLyDo.setText("");
        txtLink.setText("");
        try {
            BufferedImage img = null;
            img = ImageIO.read(new File("./src/File/Image/no-image.png"));
            Image img1 = img.getScaledInstance(displayImage.getWidth(), displayImage.getHeight(), Image.SCALE_SMOOTH);
            displayImage.setIcon(new ImageIcon(img1));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.toString());
        }
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnSuaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaDonActionPerformed
        dongchon = tableDXN.getSelectedRow();
        if (dongchon != -1) {

            ArrayList<DonXinNghiGV> newDxns = new ArrayList<>(donXinNghiTheoMaGV);
            try {
                if (checkInput()) {
                    String status = "";
                    if (rdBiBenh.isSelected()) {
                        status = "Bị bệnh";
                    }
                    if (rdBinhThuong.isSelected()) {
                        status = "Bình thường";
                    }
                    dxn = new DonXinNghiGV(txtMaDon.getText(),
                            txtMaGV.getText(), txtLyDo.getText(),
                            txtLink.getText(),
                            status, txtNgayNop.getText(),
                            jDateChooser1.getDate().toString(), jDateChooser2.getDate().toString(), false);

                    newDxns.set(dongchon, dxn);

                    if (newDxns.get(dongchon).isTtDon()) {
                        JOptionPane.showMessageDialog(this, "Đơn đã được duyệt", "Xác nhận", WIDTH);
                    } else {
                        addImageToFolder(linkAbsolute);

                        DonXinNghiGV.dxngvs.remove(newDxns.get(dongchon));
                        DonXinNghiGV.dxngvs.add(dxn);

                        donXinNghiTheoMaGV = new TreeSet<>(newDxns);

                        LoadTableDXN();
                        JOptionPane.showMessageDialog(this, "Sửa thành công", "Xác nhận", WIDTH);
                        DonXinNghiGV.writeData();
                    }

                }
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(this, "Lỗi", "Xác nhận", WIDTH);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Có lỗi", "Thông báo", WIDTH);
        }
    }//GEN-LAST:event_btnSuaDonActionPerformed

    private void btnXoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaDonActionPerformed
        dongchon = tableDXN.getSelectedRow();
        if (dongchon != -1 && !dxn.isTtDon()) {

            int select = JOptionPane.showConfirmDialog(this, "Xác nhận xóa bản ghi", "Xác nhận", WIDTH);
            if (select == 0) {
                ArrayList<DonXinNghi> newDxns = new ArrayList<DonXinNghi>(donXinNghiTheoMaGV);

                donXinNghiTheoMaGV.remove(newDxns.get(dongchon));
                DonXinNghiGV.dxngvs.remove(newDxns.get(dongchon));

                LoadTableDXN();
                JOptionPane.showMessageDialog(this, "Xóa thành công", "Xác nhận", WIDTH);
                DonXinNghiGV.writeData();
            }

        } else
            JOptionPane.showMessageDialog(this,
                    "Chưa chọn dòng xóa", "Thông báo", WIDTH);
    }//GEN-LAST:event_btnXoaDonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnNewDon;
    private javax.swing.JButton btnSelectFile;
    private javax.swing.JButton btnSuaDon;
    private javax.swing.JButton btnXoaDon;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel dateNgayKTNghi;
    private javax.swing.JLabel displayImage;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel labelAnh;
    private javax.swing.JLabel labelLyDo;
    private javax.swing.JLabel labelMaDon;
    private javax.swing.JLabel labelMaGV;
    private javax.swing.JLabel labelNgayBDNghi;
    private javax.swing.JLabel labelNgayNop;
    private javax.swing.JLabel labelTinhTrangSucKhoe;
    private javax.swing.JRadioButton rdBiBenh;
    private javax.swing.JRadioButton rdBinhThuong;
    private javax.swing.JLabel tName;
    private javax.swing.JLabel tNameUniversity;
    private javax.swing.JTable tableDXN;
    private javax.swing.JTextField txtLink;
    private javax.swing.JTextField txtLyDo;
    private javax.swing.JTextField txtMaDon;
    private javax.swing.JTextField txtMaGV;
    private javax.swing.JTextField txtNgayNop;
    // End of variables declaration//GEN-END:variables
}
