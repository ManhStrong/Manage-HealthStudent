/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import static GUI.TrangChuSinhVien.LOGO;
import ObjectPG.KhaiBaoYTeSinhVien;
import ObjectPG.TableKhaiBaoYTe;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.TreeSet;
import javax.imageio.ImageIO;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author trqhu
 */
public class KhaiBaoYTeSVJF extends javax.swing.JFrame {

    private String maSV;
    ButtonGroup btnGroup = new ButtonGroup();
    int dongchon = -1;
    KhaiBaoYTeSinhVien kbyt = new KhaiBaoYTeSinhVien();

    /**
     * Creates new form KhaiBaoYTe
     */
    public void LoadTableKBYT(TreeSet<KhaiBaoYTeSinhVien> a) {
        for (KhaiBaoYTeSinhVien val : KhaiBaoYTeSinhVien.kbyts) {
            if (val.getMaSV().compareTo(maSV) == 0) {
                a.add(val);
            }
        }
        tableKBYT.setModel(new TableKhaiBaoYTe(a));
    }

    public KhaiBaoYTeSVJF() {
        TreeSet<KhaiBaoYTeSinhVien> temp = new TreeSet<KhaiBaoYTeSinhVien>();
        initComponents();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(this.DISPOSE_ON_CLOSE);
        formatHeader();
        formatInput("");
        formatButtons();
        KhaiBaoYTeSinhVien.readData();
        LoadTableKBYT(temp);
    }

    public KhaiBaoYTeSVJF(String maSV) {
        TreeSet<KhaiBaoYTeSinhVien> temp = new TreeSet<KhaiBaoYTeSinhVien>();
        this.maSV = maSV;
        initComponents();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(this.DISPOSE_ON_CLOSE);
        formatHeader();
        formatInput(maSV);
        formatButtons();
        
        KhaiBaoYTeSinhVien.readData();
        LoadTableKBYT(temp);
    }

    public void showLogo(String linkImage) {
        try {
            BufferedImage img = null;
            img = ImageIO.read(new File(linkImage));
            Image img1 = img.getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH);
            jLabel1.setIcon(new ImageIcon(img1));
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }

    public void formatHeader() {
        showLogo(LOGO);
        tNameUniversity.setText("Trường Đại Học Công Nghiệp Hà Nội");
        tName.setText("Khai báo y tế");
    }

    public void formatButtons() {
        btnGroup.add(rdF0);
        btnGroup.add(rdKhac);
        btnGroup.add(rdF1);
    }

    public void formatInput(String maSV) {
        LocalDateTime now = LocalDateTime.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm");
        tfMaDon.setText(KhaiBaoYTeSinhVien.kbyts.size() + formatter.format(now) + "");
        tfMaSV.setText(maSV + "");
        LocalDate today = LocalDate.now();
        tfNgayNop.setText(today + "");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tNameUniversity = new javax.swing.JLabel();
        tName = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableKBYT = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnNewDon = new javax.swing.JButton();
        btnSuaDon = new javax.swing.JButton();
        btnXoaDon = new javax.swing.JButton();
        tMaDon = new javax.swing.JLabel();
        tMaSV = new javax.swing.JLabel();
        tMaSV1 = new javax.swing.JLabel();
        tMaSV2 = new javax.swing.JLabel();
        tMaSV3 = new javax.swing.JLabel();
        tMaSV4 = new javax.swing.JLabel();
        tfMaDon = new javax.swing.JTextField();
        tfMaSV = new javax.swing.JTextField();
        tfLyDo = new javax.swing.JTextField();
        tfNgayNop = new javax.swing.JTextField();
        rdF0 = new javax.swing.JRadioButton();
        rdF1 = new javax.swing.JRadioButton();
        btnClear = new javax.swing.JButton();
        rdKhac = new javax.swing.JRadioButton();
        cbSot = new javax.swing.JCheckBox();
        cbHo = new javax.swing.JCheckBox();
        cbMM = new javax.swing.JCheckBox();
        cbKhoTho = new javax.swing.JCheckBox();
        cbDauDau = new javax.swing.JCheckBox();
        cbMVG = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setPreferredSize(new java.awt.Dimension(1000, 800));

        jLabel1.setText("Logo");

        tNameUniversity.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tNameUniversity.setText("Name University");

        tName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        tName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tName.setText("Name");

        tableKBYT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableKBYTMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tableKBYT);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 51, 0));
        jLabel2.setText("Biểu mẫu đã khai báo");

        btnNewDon.setText("Nộp đơn mới");
        btnNewDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewDonActionPerformed(evt);
            }
        });

        btnSuaDon.setText("Sửa đơn");
        btnSuaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaDonActionPerformed(evt);
            }
        });

        btnXoaDon.setText("Xóa đơn");
        btnXoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaDonActionPerformed(evt);
            }
        });

        tMaDon.setText("Mã khai báo:");

        tMaSV.setText("Mã sinh viên:");

        tMaSV1.setText("Lý do:");

        tMaSV2.setText("Triệu chứng:");

        tMaSV3.setText("Thuộc diện:");

        tMaSV4.setText("Ngày nộp:");

        tfMaDon.setEnabled(false);

        tfMaSV.setEnabled(false);

        tfNgayNop.setEnabled(false);

        rdF0.setText("F0");

        rdF1.setText("F1");

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        rdKhac.setText("Khác");

        cbSot.setText("Sốt");

        cbHo.setText("Ho");

        cbMM.setText("Mệt, mỏi");

        cbKhoTho.setText("Khó thở");

        cbDauDau.setText("Đau đầu");

        cbMVG.setText("Mất vị giác");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(181, 181, 181)
                        .addComponent(btnClear))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jScrollPane3)))
                .addGap(95, 95, 95))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tMaSV, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                                    .addComponent(tMaDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tMaSV1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tMaSV3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tMaSV4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfMaDon)
                                    .addComponent(tfMaSV)
                                    .addComponent(tfLyDo)
                                    .addComponent(tfNgayNop)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(rdF0, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                                        .addComponent(rdF1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(58, 58, 58)
                                        .addComponent(rdKhac, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(tMaSV2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbSot, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbKhoTho, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(83, 83, 83)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbMVG, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbHo, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(73, 73, 73)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(cbMM, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbDauDau, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tNameUniversity, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tName, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(192, 192, 192)
                        .addComponent(btnNewDon)
                        .addGap(95, 95, 95)
                        .addComponent(btnSuaDon)
                        .addGap(91, 91, 91)
                        .addComponent(btnXoaDon)))
                .addContainerGap(205, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tNameUniversity)
                    .addComponent(tName))
                .addGap(35, 35, 35)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tMaDon)
                    .addComponent(tfMaDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tMaSV)
                    .addComponent(tfMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tMaSV1)
                    .addComponent(tfLyDo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tMaSV3)
                    .addComponent(rdF0)
                    .addComponent(rdF1)
                    .addComponent(rdKhac))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tMaSV4)
                    .addComponent(tfNgayNop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tMaSV2)
                    .addComponent(cbSot)
                    .addComponent(cbHo)
                    .addComponent(cbMM))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbDauDau)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbKhoTho)
                        .addComponent(cbMVG)))
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClear)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNewDon)
                    .addComponent(btnSuaDon)
                    .addComponent(btnXoaDon))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 833, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableKBYTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableKBYTMouseClicked
        // TODO add your handling code here:
        dongchon = tableKBYT.getSelectedRow();
        if (dongchon != -1) {
            //reset các checkbox
            cbSot.setSelected(false);
            cbHo.setSelected(false);
            cbMM.setSelected(false);
            cbKhoTho.setSelected(false);
            cbMVG.setSelected(false);
            cbDauDau.setSelected(false);
            ArrayList<KhaiBaoYTeSinhVien> newKbyts = new ArrayList<KhaiBaoYTeSinhVien>(KhaiBaoYTeSinhVien.kbyts);
            kbyt = newKbyts.get(dongchon);

            tfMaDon.setText(kbyt.getMaKB());
            tfMaSV.setText(kbyt.getMaSV());
            tfLyDo.setText(kbyt.getLyDo());
            tfNgayNop.setText(kbyt.getNgayNop());
            if (kbyt.getThuocDien().compareTo("F0") == 0) {
                rdF0.setSelected(true);
            }
            if (kbyt.getThuocDien().compareTo("F1") == 0) {
                rdF1.setSelected(true);
            }
            if (kbyt.getThuocDien().compareTo("Khác") == 0) {
                rdKhac.setSelected(true);
            }
            String tempTrieuChung = kbyt.getTrangThai();
            String[] trieuChung = tempTrieuChung.split(", ");
            for (String val : trieuChung) {
                if (val.compareTo("Sốt") == 0) {
                    cbSot.setSelected(true);
                }
                if (val.compareTo("Ho") == 0) {
                    cbHo.setSelected(true);
                }
                if (val.compareTo("Mệt,mỏi") == 0) {
                    cbMM.setSelected(true);
                }
                if (val.compareTo("Khó thở") == 0) {
                    cbKhoTho.setSelected(true);
                }
                if (val.compareTo("Mất vị giác") == 0) {
                    cbMVG.setSelected(true);
                }
                if (val.compareTo("Đau đầu") == 0) {
                    cbDauDau.setSelected(true);
                }
            }
        }

    }//GEN-LAST:event_tableKBYTMouseClicked

    public Boolean checkInput() {
        if (tfLyDo.getText().compareTo("") == 0) {
            JOptionPane.showMessageDialog(this, "Lý do không được để trống");
            return false;
        } else if (rdF0.isSelected() == false && rdF1.isSelected() == false && rdKhac.isSelected() == false) {
            JOptionPane.showMessageDialog(this, "Thuộc diện không được để trống");
            return false;
        }
        return true;
    }
    private void btnNewDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewDonActionPerformed
        // TODO add your handling code here:
        if (checkInput()) {
            TreeSet<KhaiBaoYTeSinhVien> temp = new TreeSet<KhaiBaoYTeSinhVien>();
            int sizeBeforeAdd = KhaiBaoYTeSinhVien.kbyts.size();
            String thuocDien = "";
            if (rdF0.isSelected()) {
                thuocDien = "F0";
            }
            if (rdF1.isSelected()) {
                thuocDien = "F1";
            }
            if (rdKhac.isSelected()) {
                thuocDien = "Khác";
            }
            String trieuChung = "";
            if (cbSot.isSelected()) {
                trieuChung += "Sốt";
            }
            if (cbHo.isSelected()) {
                trieuChung += ", Ho";
            }
            if (cbMM.isSelected()) {
                trieuChung += ", Mệt,mỏi";
            }
            if (cbKhoTho.isSelected()) {
                trieuChung += ", Khó thở";
            }
            if (cbMVG.isSelected()) {
                trieuChung += ", Mất vị giác";
            }
            if (cbDauDau.isSelected()) {
                trieuChung += ", Đau đầu";
            }

            kbyt = new KhaiBaoYTeSinhVien(tfMaDon.getText(), tfMaSV.getText(),
                    tfLyDo.getText(), tfNgayNop.getText(),
                    thuocDien, trieuChung);
            KhaiBaoYTeSinhVien.kbyts.add(kbyt);
            if (sizeBeforeAdd == KhaiBaoYTeSinhVien.kbyts.size()) {
                JOptionPane.showMessageDialog(this,
                        "Thêm mới không thành công! Vui lòng nhấn Clear trước khi nhập dữ liệu", "Thông báo", WIDTH);
            } else {
                JOptionPane.showMessageDialog(this,
                        "Thêm thành công", "Xác nhận", WIDTH);
            }
            LoadTableKBYT(temp);
            KhaiBaoYTeSinhVien.writeData();
        }

    }//GEN-LAST:event_btnNewDonActionPerformed

    private void btnSuaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaDonActionPerformed
        // TODO add your handling code here:
        dongchon = tableKBYT.getSelectedRow();
        if (dongchon != -1) {
            TreeSet<KhaiBaoYTeSinhVien> temp = new TreeSet<KhaiBaoYTeSinhVien>();
            ArrayList<KhaiBaoYTeSinhVien> newKbyts = new ArrayList<KhaiBaoYTeSinhVien>(KhaiBaoYTeSinhVien.kbyts);

            if (checkInput()) {
                String thuocDien = "";
                if (rdF0.isSelected()) {
                    thuocDien = "F0";
                }
                if (rdF1.isSelected()) {
                    thuocDien = "F1";
                }
                if (rdKhac.isSelected()) {
                    thuocDien = "Khác";
                }
                String trieuChung = "";
                if (cbSot.isSelected()) {
                    trieuChung += "Sốt";
                }
                if (cbHo.isSelected()) {
                    trieuChung += ", Ho";
                }
                if (cbMM.isSelected()) {
                    trieuChung += ", Mệt,mỏi";
                }
                if (cbKhoTho.isSelected()) {
                    trieuChung += ", Khó thở";
                }
                if (cbMVG.isSelected()) {
                    trieuChung += ", Mất vị giác";
                }
                if (cbDauDau.isSelected()) {
                    trieuChung += ", Đau đầu";
                }
                kbyt = new KhaiBaoYTeSinhVien(tfMaDon.getText(), tfMaSV.getText(),
                    tfLyDo.getText(), tfNgayNop.getText(),
                    thuocDien, trieuChung);
                
                newKbyts.set(dongchon, kbyt);
                KhaiBaoYTeSinhVien.kbyts = new TreeSet<KhaiBaoYTeSinhVien>(newKbyts);
                LoadTableKBYT(temp);
                JOptionPane.showMessageDialog(this,
                    "Sửa thành công", "Xác nhận", WIDTH);
                KhaiBaoYTeSinhVien.writeData();
            }
        } else {
            JOptionPane.showMessageDialog(this,
                    "Chưa chọn dòng sửa", "Thông báo", WIDTH);
        }

    }//GEN-LAST:event_btnSuaDonActionPerformed

    private void btnXoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaDonActionPerformed
        // TODO add your handling code here:
        dongchon = tableKBYT.getSelectedRow();
        if (dongchon != -1) {
            TreeSet<KhaiBaoYTeSinhVien> temp = new TreeSet<KhaiBaoYTeSinhVien>();
            int select = JOptionPane.showConfirmDialog(this, "Xác nhận xóa bản ghi", "Xác nhận", WIDTH);
            if (select == 0) {
                ArrayList<KhaiBaoYTeSinhVien> newDxns = new ArrayList<KhaiBaoYTeSinhVien>(KhaiBaoYTeSinhVien.kbyts);
                KhaiBaoYTeSinhVien.kbyts.remove(newDxns.get(dongchon));
                LoadTableKBYT(temp);
                JOptionPane.showMessageDialog(this,
                        "Xóa thành công", "Xác nhận", WIDTH);
                KhaiBaoYTeSinhVien.writeData();
            }

        } else
            JOptionPane.showMessageDialog(this,
                    "Chưa chọn dòng xóa", "Thông báo", WIDTH);

    }//GEN-LAST:event_btnXoaDonActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        LocalDateTime now = LocalDateTime.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm");
        tfMaDon.setText(KhaiBaoYTeSinhVien.kbyts.size()+ formatter.format(now) + "");
        tfMaSV.setText(maSV + "");
        tfLyDo.setText("");
        LocalDate today = LocalDate.now();
        tfNgayNop.setText(today.toString());
        btnGroup.clearSelection();
        cbHo.setSelected(false);
        cbDauDau.setSelected(false);
        cbKhoTho.setSelected(false);
        cbMM.setSelected(false);
        cbMVG.setSelected(false);
        cbSot.setSelected(false);
    }//GEN-LAST:event_btnClearActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnNewDon;
    private javax.swing.JButton btnSuaDon;
    private javax.swing.JButton btnXoaDon;
    private javax.swing.JCheckBox cbDauDau;
    private javax.swing.JCheckBox cbHo;
    private javax.swing.JCheckBox cbKhoTho;
    private javax.swing.JCheckBox cbMM;
    private javax.swing.JCheckBox cbMVG;
    private javax.swing.JCheckBox cbSot;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JRadioButton rdF0;
    private javax.swing.JRadioButton rdF1;
    private javax.swing.JRadioButton rdKhac;
    private javax.swing.JLabel tMaDon;
    private javax.swing.JLabel tMaSV;
    private javax.swing.JLabel tMaSV1;
    private javax.swing.JLabel tMaSV2;
    private javax.swing.JLabel tMaSV3;
    private javax.swing.JLabel tMaSV4;
    private javax.swing.JLabel tName;
    private javax.swing.JLabel tNameUniversity;
    private javax.swing.JTable tableKBYT;
    private javax.swing.JTextField tfLyDo;
    private javax.swing.JTextField tfMaDon;
    private javax.swing.JTextField tfMaSV;
    private javax.swing.JTextField tfNgayNop;
    // End of variables declaration//GEN-END:variables
}
